package com.aucean.vmtest.mvvm.dataprovider

import com.aucean.vmtest.database.AppDatabase
import com.aucean.vmtest.mvvm.*
import io.reactivex.Observable
import com.aucean.vmtest.mvvm.bindingmodel.VmTemplateExampleBindingModel
import com.aucean.vmtest.mvvm.bindingmodel.VmTemplateExampleBindingModelItem

/**
 * Generated by DataProviderTemplate
 */
class VmTemplateExampleDataProvider
    : BaseDataProvider<VmTemplateExampleApiParams, VmTemplateExampleRawDataModel>(VmTemplateExampleNetWorkDataProvider()) {

    protected class VmTemplateExampleNetWorkDataProvider : BaseNetworkProvider<VmTemplateExampleApiParams, VmTemplateExampleRawDataModel>() {
        override fun getDataFromNetwork(params: VmTemplateExampleApiParams): Observable<ResponseModel<VmTemplateExampleRawDataModel>> {
            /* e.g.
             *      return HttpHelper.getServer().getExampleData(params.stockType, params.stockCode)
            */
            return HttpHelper.getServer().getArticleList(params.timestamp, params.count)
        }
    }
}

class VmTemplateExampleApiParams(
        var timestamp: Long? = null,
        var count: Int? = 15
)
/**
 * Api 返回数据Bean对象(网络层数据Bean)
 */
typealias VmTemplateExampleRawDataModel = List<ArticleItem>

data class ArticleItem(
        val source: Int,
        val refId: Int,
        val publishDate: Long,
        val latestUpdateTime: Long,
        val title: String,
        val summary: String,
        val image: String
) {
    fun toVmTemplateExampleBindingModelItem(): VmTemplateExampleBindingModelItem {
        return VmTemplateExampleBindingModelItem(image, title, summary, refId)
    }
}