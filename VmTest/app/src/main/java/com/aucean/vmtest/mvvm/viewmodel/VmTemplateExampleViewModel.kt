package com.aucean.vmtest.mvvm.viewmodel

import com.aucean.vmtest.mvvm.BaseViewModel
import com.aucean.vmtest.mvvm.GlhLiveData
import com.aucean.vmtest.mvvm.dataprovider.VmTemplateExampleDataProvider
import com.aucean.vmtest.mvvm.dataprovider.VmTemplateExampleApiParams
import com.aucean.vmtest.mvvm.dataprovider.VmTemplateExampleRawDataModel
import com.aucean.vmtest.mvvm.bindingmodel.VmTemplateExampleBindingModel
import java.util.*

/**
 * Generated by DataProviderTemplate
 */
class VmTemplateExampleViewModel
    : BaseViewModel() {
    private val currentDataProvider = VmTemplateExampleDataProvider()

    val bindingModel = object : GlhLiveData<VmTemplateExampleBindingModel, VmTemplateExampleRawDataModel>() {
        override fun converter(data: VmTemplateExampleRawDataModel): VmTemplateExampleBindingModel? {
            return data.map { it ->
                it.toVmTemplateExampleBindingModelItem()
            }
        }
    }

    fun getData(/*根据需要添加请求参数*/) {
        currentDataProvider.getData(VmTemplateExampleApiParams(), bindingModel, {})
    }

    fun refreshData() {
        currentDataProvider.getData(VmTemplateExampleApiParams().apply {
            val curr = Calendar.getInstance()
            val MAX = curr.timeInMillis/1000
            curr.set(2017, 1,1)
            val MIN = curr.timeInMillis/1000
            timestamp = Random().nextInt((MAX - MIN + 1).toInt()) + MIN
        }, bindingModel, {})
    }
}